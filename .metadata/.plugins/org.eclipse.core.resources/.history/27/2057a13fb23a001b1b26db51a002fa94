package com.example.service;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.domain.ClubVO;
import com.example.domain.CuVO;
import com.example.mapper_oracle.CbMapper;
import com.example.mapper_oracle.CbrMapper;
import com.example.mapper_oracle.ClubMapper;
import com.example.mapper_oracle.CnMapper;
import com.example.mapper_oracle.CnrMapper;
import com.example.mapper_oracle.CuMapper;

@Service
public class ClubService {
   @Autowired
   CnMapper cnMapper;

   @Autowired
   CnrMapper cnrMapper;

   @Autowired
   CbrMapper cbrMapper;

   @Autowired
   CbMapper cbMapper;

   @Autowired
   ClubMapper cMapper;

   @Autowired
   CuMapper cuMapper;

   @Autowired
   ClubMapper mapper;

   // 동아리 공지사항 게시물을 삭제한다.이때 해당 게시물에 댓글까지 삭제한다. 
   @Transactional
   public void cnDelete(int cn_no) {
      cnMapper.cnrdelete(cn_no);
      cnMapper.cndelete(cn_no);
   }
   
   // 동아리 자유게시판 게시물을 삭제한다.이때 해당 게시물에 댓글까지 삭제한다. 
   @Transactional
   public void cbDelete(int cb_no) {
      cbMapper.cbrDelete(cb_no);
      cbMapper.cbDelete(cb_no);
   }

   // 동아리를 만든다 이떄 cu table에 만든 사람까지 추가한다
   @Transactional
   public void makeClub(ClubVO vo, HttpSession session) {
      cMapper.insert(vo);
      CuVO cvo = new CuVO();
      cvo.setC_code(cMapper.max(vo.getC_pid()));
      cvo.setId((String) session.getAttribute("id"));
      cvo.setCu_fchk('n');
      cvo.setCu_pchk('y');
      cvo.setCu_schk('y');
      cuMapper.addMember(cvo);
   }

   // 마스터 동아리 삭제
   @Transactional
   public void deleteClub(String id) {
      cuMapper.searchcuid(id);
   }
   
   // 마스터 동아리 c_code로 삭제
   @Transactional
   public void deleteClubC_code(String c_code) {
      int intC_code = Integer.parseInt(c_code);
      cbrMapper.deletepcbr(intC_code);
      cbMapper.deletepcb(intC_code);

      cnrMapper.deletepcnr(intC_code);
      cnMapper.deletepcn(intC_code);

      cuMapper.deletepcu(intC_code);
      mapper.deleteclub(intC_code);
   }
   
   //내 정보 동아리 삭제
   @Transactional
   public void deletemyClub(String id, int c_code) {
      int pid = mapper.selectpid(id);
      if (pid == 0) {
         cbrMapper.deletemycbr(id, c_code);
         cbMapper.deletemycb(id, c_code);

         cnrMapper.deletemycnr(id, c_code);
         cnMapper.deletemycn(id, c_code);

         cuMapper.deletemycu(id, c_code);
      } else if (pid != 0) {
         int intc_code = mapper.selectclub(id);

         cbrMapper.deletepcbr(intc_code);
         cbMapper.deletepcb(intc_code);

         cnrMapper.deletepcnr(intc_code);
         cnMapper.deletepcn(intc_code);

         cuMapper.deletepcu(intc_code);
         mapper.deleteclub(intc_code);
      }
   }

}