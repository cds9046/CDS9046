package com.example.controller;

import java.io.File;
import java.util.HashMap;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.example.domain.Criteria;
import com.example.domain.PageMaker;
import com.example.domain.UserVO;
import com.example.mapper_oracle.MypageMapper;
import com.example.service.MasterService;

@Controller
public class MypageController {
	@Autowired
	MypageMapper mapper;
	
	@Resource(name = "uploadPath")
	   String path;
	
	@Autowired
	MasterService service;
	// mypage에 연결
	@RequestMapping("mypage")
	public void mypage(){}
	
	// 내 정보 확인
	@RequestMapping("myinfo")
	@ResponseBody
	public void myinfo(HttpSession session, Model model){
		String id = (String) session.getAttribute("id");
		model.addAttribute("infolist",mapper.myinfo(id));
	}
	
	//내 정보 수정
	@RequestMapping("myinfoupdate")
	public String myinfoupdate(HttpSession session, UserVO vo, MultipartHttpServletRequest multi) throws Exception {
	      MultipartFile file = multi.getFile("file");
	      // System.out.println(vo.toString());
	      if(file.isEmpty()){
	         vo.setImage("default.jpg");
	      }else if (!file.isEmpty()) {
	         String image = System.currentTimeMillis() + "_" + file.getOriginalFilename();
	         // System.out.println(image);
	         file.transferTo(new File(path + "/" + image));
	         vo.setImage(image);
	      }
		String id = (String) session.getAttribute("id");
		vo.setId(id);
		mapper.myinfoupdate(vo);
		return "redireect:mypage";
	}
	
	
	@RequestMapping("removeuser")
	public String removeuser(HttpSession session){
		String id = (String) session.getAttribute("id");
		service.mudelete(id);
		return "redirect:/";
	}
	
	@RequestMapping("myclub")
	public void myclub(){
	}
	
	@RequestMapping("myclubinfo")
	@ResponseBody
	public HashMap<String, Object> mclist(int page, Criteria cri) {
		HashMap<String, Object> map = new HashMap<>();
		PageMaker pm = new PageMaker();
		cri.setPage(page);
		pm.setCri(cri);
		pm.setTotalCount(mapper.myctotalCount(cri));

		map.put("pm", pm);
		map.put("myclist", mapper.myclist(cri));
		return map;
	}
	
	@RequestMapping("removeclub")
	public String removeclub(Criteria cri){
		String c_code = "";
		service.mcdelete(c_code);
		return "redirect:myclub";
	}
}
